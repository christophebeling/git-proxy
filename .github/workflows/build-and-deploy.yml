name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  AZURE_RESOURCE_GROUP: asy-github-proxy
  AZURE_REGION: gwc
  ACR_NAME: gitproxyacr
  ACR_REPOSITORY: yourrepository
  APP_SERVICE_PLAN_NAME: git-proxy-appserviceplan
  APP_SERVICE_NAME: git-proxy-appservice
  TF_VERSION: 1.4.5 # Specify the Terraform version you are using

permissions:
  id-token: write
  contents: read

jobs:
  create-infrastructure:
    name: Create Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure CLI using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=tfstate-rg" -backend-config="storage_account_name=tfstateaccount" -backend-config="container_name=tfstate" -backend-config="key=terraform.tfstate"
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -target=azurerm_container_registry.git_proxy
        working-directory: ./terraform

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure CLI using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Build Docker image
        run: docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.ACR_REPOSITORY }}:${{ github.run_id }} .

      - name: Push Docker image to ACR
        run: docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.ACR_REPOSITORY }}:${{ github.run_id }}

  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure CLI using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var "acr_image_tag=${{ github.run_id }}"
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform
